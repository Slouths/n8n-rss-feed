name: Update RSS Feed

on:
  workflow_dispatch:  # Manual trigger
  schedule:
    - cron: "0,5,10,15,20,25,30,35,40,45,50,55 * * * *"  # Every 5 minutes (explicit)

permissions:
  contents: write  # Needed to push changes to the repo

jobs:
  update-feed:
    runs-on: ubuntu-latest
    
    steps:
      # 1. Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3
      
      # 2. Configure Git for commit
      - name: Configure Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "action@github.com"
      
      # 3. Ensure rss.xml exists (create if missing)
      - name: Ensure rss.xml exists
        run: |
          if [ ! -f rss.xml ]; then
            cat <<'EOF' > rss.xml
          <?xml version="1.0" encoding="UTF-8"?>
          <rss version="2.0">
            <channel>
              <title>n8n Test Feed</title>
              <link>https://slouths.github.io/n8n-rss-feed/</link>
              <description>Testing RSS automation for n8n</description>
            </channel>
          </rss>
          EOF
          fi
      
      # 4. Add new article to feed with fake links and titles
      - name: Add new article
        run: |
          # Generate fake article data
          ARTICLE_ID=$(date +%s)
          
          # Array of fake titles
          TITLES=(
            "Breaking: Scientists Discover New Species of Digital Butterfly"
            "Tech Innovation: AI-Powered Coffee Makers Take Over Silicon Valley"
            "Global Markets React to Unexpected Cryptocurrency Discovery"
            "Health Study: Benefits of Virtual Reality Exercise Programs"
            "Climate Change: New Solar Panel Technology Shows 200% Efficiency"
            "Space Exploration: Mars Colony Welcomes First Digital Tourists"
            "Education Revolution: Students Learn Through Holographic Teachers"
            "Transportation Update: Flying Cars Begin Beta Testing in Major Cities"
            "Medical Breakthrough: Gene Therapy Reverses Aging Process"
            "Entertainment News: Virtual Concerts Draw Millions of Avatars"
          )
          
          # Array of fake domains for links
          DOMAINS=(
            "techinsider.example"
            "newshub.demo"
            "sciencetoday.test"
            "digitalworld.fake"
            "futurenews.mock"
            "innovationreport.sample"
            "breakthroughnews.demo"
            "tomorrowtoday.test"
            "nextgenupdate.example"
            "pioneerspost.mock"
          )
          
          # Select random title and domain
          TITLE_INDEX=$((RANDOM % ${#TITLES[@]}))
          DOMAIN_INDEX=$((RANDOM % ${#DOMAINS[@]}))
          
          TITLE="${TITLES[$TITLE_INDEX]} - $(date +'%Y-%m-%d %H:%M')"
          LINK="https://${DOMAINS[$DOMAIN_INDEX]}/article-${ARTICLE_ID}"
          PUBDATE="$(date -u +'%a, %d %b %Y %H:%M:%S GMT')"
          DESCRIPTION="This is an automatically generated test article for RSS feed automation. Published at $(date)."
          
          # Create new RSS item
          NEW_ITEM="    <item>
            <title><![CDATA[$TITLE]]></title>
            <link>$LINK</link>
            <guid isPermaLink=\"true\">$LINK</guid>
            <pubDate>$PUBDATE</pubDate>
            <description><![CDATA[$DESCRIPTION]]></description>
          </item>"
          
          # Insert new item after <channel> opening tag and limit to 10 items
          awk -v newItem="$NEW_ITEM" '
          BEGIN { itemCount = 0; inChannel = 0 }
          /<channel>/ { 
            print $0
            print newItem
            inChannel = 1
            next 
          }
          /<item>/ { 
            if (inChannel) itemCount++
            if (itemCount <= 9) print $0
            else skip = 1
            next
          }
          /<\/item>/ {
            if (itemCount <= 9 && !skip) print $0
            skip = 0
            next
          }
          /<\/channel>/ {
            print $0
            inChannel = 0
            next
          }
          /<\/rss>/ {
            print $0
            next
          }
          {
            if (itemCount <= 9 && !skip) print $0
          }
          ' rss.xml > rss.tmp && mv rss.tmp rss.xml

      # 5. Commit and push changes
      - name: Commit and push
        run: |
          git add rss.xml
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Add new article: $(date +'%Y-%m-%d %H:%M:%S UTC')"
            git push
          fi
